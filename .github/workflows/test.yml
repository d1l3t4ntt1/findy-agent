name: test
on:
  push:
jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.20.x
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          args: "--out-${NO_FUTURE}format colored-line-number --timeout=15m"
          version: v1.51.1
          skip-cache: true
          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          skip-pkg-cache: true
          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          skip-build-cache: true

  test-default:
    runs-on: ubuntu-latest
    needs: [lint]
    env:
      TEST_WORKDIR: /github/home/.test/
      CI: true
    steps:
      # setup von-network ledger
      - uses: actions/checkout@v3
        with:
          repository: "bcgov/von-network"
          ref: "22973513c99cc9a286a6f181ca5c5f354a4eb2ee"
      - name: skip setting volumes for web server
        run: |
          sed '/      - .\/config:\/home\/indy\/config/d' docker-compose.yml > docker-compose.yml.tmp
          sed '/      - .\/server:\/home\/indy\/server/d' docker-compose.yml.tmp > docker-compose.yml

      - name: start indy ledger
        run: |
          ./manage build
          ./manage start

      # install indy
      - uses: actions/checkout@v3
        with:
          repository: "findy-network/findy-wrapper-go"
      - name: install indy
        run: make indy_to_debian

      # setup go-env
      - name: setup
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.x
      - name: checkout
        uses: actions/checkout@v3

      # test round for sov-did (default) and indy ledger
      - name: test and measure coverage
        run: |
          curl http://localhost:9000/genesis > gen_txn_file
          make test_grpcv_cov_out COV_FILE=coverage1.txt
        env:
          TEST_TIMEOUT: 6000s
          TEST_ARGS: "-vmodule=grpc_test*=5 -v=0 -logtostderr"
          FCLI_POOL_NAME: "von"
          FCLI_AGENCY_POOL_NAME: "FINDY_LEDGER,von"

      - name: store coverage file
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-coverage1.txt
          path: ./coverage1.txt
          retention-days: 1

  test-peer:
    runs-on: ubuntu-latest
    needs: [lint]
    container: ghcr.io/findy-network/findy-base:indy-1.16.ubuntu-18.04
    env:
      TEST_WORKDIR: /github/home/.test/
      CI: true
    steps:
      - name: Install make & certs
        run: apt-get update && apt-get install -y build-essential ca-certificates
      - name: setup
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.x
      - name: checkout
        uses: actions/checkout@v3

      # test round for peer-did and mem-ledger
      - name: test and measure coverage (peer did)
        run: make test_cov_out COV_FILE=coverage2.txt
        env:
          FCLI_AGENCY_DID_METHOD: "2"

      - name: store coverage file
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-coverage2.txt
          path: ./coverage2.txt
          retention-days: 1

  license-scan:
    runs-on: ubuntu-latest
    needs: [lint]
    container: ghcr.io/findy-network/findy-base:indy-1.16.ubuntu-18.04
    steps:
      - name: Install make & certs
        run: apt-get update && apt-get install -y build-essential ca-certificates
      - name: setup
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.x
      - name: checkout
        uses: actions/checkout@v3

      # licence scan
      - name: scan
        run: make scan

  test-docker-image:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: docker image
        run: make image

  upload-coverage:
    runs-on: ubuntu-latest
    needs: [test-default, test-peer]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: download coverage file
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-coverage1.txt
      - name: download coverage file
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-coverage2.txt
      - name: upload coverage
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage1.txt,./coverage2.txt

  e2e:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      # install indy
      - uses: actions/checkout@v3
        with:
          repository: "findy-network/findy-wrapper-go"
      - name: install indy
        run: make indy_to_debian
      - name: setup
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.x
      - name: checkout
        uses: actions/checkout@v3
      - name: install cli
        run: |
          curl https://raw.githubusercontent.com/findy-network/findy-agent-cli/HEAD/install.sh > install.sh
          chmod a+x install.sh
          sudo ./install.sh -b /bin
      - name: test
        run: make e2e_ci
      - name: Collect docker logs
        if: ${{ failure() }}
        uses: jwalton/gh-docker-logs@v2.0.2
        with:
          dest: "./tests_output/docker-logs"
      - name: archive logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: e2e-logs
          path: tests_output
