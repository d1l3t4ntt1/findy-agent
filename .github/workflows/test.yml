name: test
on:
  workflow_run:
    workflows: [release]
    types: [completed]
  push:
jobs:
  lint:
    runs-on: ubuntu-latest
    container: ghcr.io/findy-network/findy-base:indy-1.16.ubuntu-18.04
    steps:
      - name: Install make & certs
        run: apt-get update && apt-get install -y build-essential ca-certificates
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.42
          args: --timeout=5m
  test:
    runs-on: ubuntu-latest
    container: ghcr.io/findy-network/findy-base:indy-1.16.ubuntu-18.04
    steps:
      - name: Install make & certs
        run: apt-get update && apt-get install -y build-essential ca-certificates
      - name: setup
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: checkout
        uses: actions/checkout@v2
      - name: test and measure coverage
        run: make test_cov_out
        env:
          TEST_WORKDIR: /github/home/.test/
          CI: true
      - name: store coverage file
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-coverage.txt
          path: ./coverage.txt
          retention-days: 1
      - name: scan
        run: make scan

  upload-coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: download coverage file
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-coverage.txt
      - name: upload coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt

  e2e:
    runs-on: ubuntu-latest
    container: ghcr.io/findy-network/findy-base:indy-1.16.ubuntu-18.04
    steps:
      - name: Install make & certs
        run: apt-get update && apt-get install -y build-essential ca-certificates curl
      - name: setup
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: checkout
        uses: actions/checkout@v2
      - name: test
        run: make e2e_ci
        env:
          GOPATH: /go
