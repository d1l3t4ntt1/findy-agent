name: test
on:
  push:
jobs:
  lint:
    runs-on: ubuntu-latest
    container: ghcr.io/findy-network/findy-base:indy-1.16.ubuntu-18.04
    steps:
      - name: Install make & certs
        run: apt-get update && apt-get install -y build-essential ca-certificates
      - uses: actions/checkout@v2
      - name: setup
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.45.2
          args: --timeout=5m

  test-default:
    runs-on: ubuntu-latest
    container: ghcr.io/findy-network/findy-base:indy-1.16.ubuntu-18.04
    env:
      TEST_WORKDIR: /github/home/.test/
      CI: true
    steps:
      - name: Install make & certs
        run: apt-get update && apt-get install -y build-essential ca-certificates
      - name: setup
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
      - name: checkout
        uses: actions/checkout@v2

      # test round for sov-did (default)
      - name: test and measure coverage
        run: make test_cov_out COV_FILE=coverage1.txt

      - name: store coverage file
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-coverage1.txt
          path: ./coverage1.txt
          retention-days: 1

  test-peer:
    runs-on: ubuntu-latest
    container: ghcr.io/findy-network/findy-base:indy-1.16.ubuntu-18.04
    env:
      TEST_WORKDIR: /github/home/.test/
      CI: true
    steps:
      - name: Install make & certs
        run: apt-get update && apt-get install -y build-essential ca-certificates
      - name: setup
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
      - name: checkout
        uses: actions/checkout@v2

      # test round for peer-did
      - name: test and measure coverage (peer did)
        run: make test_cov_out COV_FILE=coverage2.txt
        env:
          FCLI_AGENCY_DID_METHOD: "2"

      - name: store coverage file
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-coverage2.txt
          path: ./coverage2.txt
          retention-days: 1

  license-scan:
    runs-on: ubuntu-latest
    container: ghcr.io/findy-network/findy-base:indy-1.16.ubuntu-18.04
    steps:
      - name: Install make & certs
        run: apt-get update && apt-get install -y build-essential ca-certificates
      - name: setup
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
      - name: checkout
        uses: actions/checkout@v2

      # licence scan
      - name: scan
        run: make scan

  test-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: docker image
        run: make image

  upload-coverage:
    runs-on: ubuntu-latest
    needs: [test-default, test-peer]
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: download coverage file
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-coverage1.txt
      - name: download coverage file
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-coverage2.txt
      - name: upload coverage
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage1.txt,./coverage2.txt

  e2e:
    runs-on: ubuntu-latest
    container: ghcr.io/findy-network/findy-base:indy-1.16.ubuntu-18.04
    steps:
      - name: Install make & certs
        run: apt-get update && apt-get install -y build-essential ca-certificates curl
      - name: setup
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
      - name: checkout
        uses: actions/checkout@v2
      - name: test
        run: make e2e_ci
        env:
          GOPATH: /go
